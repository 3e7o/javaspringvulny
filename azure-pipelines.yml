strategy:
  matrix:
    linux-zip:
      imageName: "ubuntu-latest"
      installerType: "zip"

pool:
  vmImage: $(imageName)

trigger: none

steps:
  - checkout: self

  - task: SnykSecurityScan@1
    inputs:
      serviceConnectionEndpoint: 'SnykTest'
      testType: 'code'
      failOnIssues: true
      projectName: 'Test10'

  # install the latest version of hawkscan
  - task: HawkScanInstall@1
    inputs:
      version: "4.3.0"
      installerType: "$(installerType)"

  # azure pipelines default jdk is 8, so we upgrade to 11 to run JavaSpringVulny
  # the hawkscan msi bundles java with it, so this step isn't necesarry for running HawkScan
  - task: JavaToolInstaller@0
    inputs:
      versionSpec: "17"
      jdkArchitectureOption: "x64"
      jdkSourceOption: "PreInstalled"

  # download, then start javaspringVulny in the background
  - script: |
      curl -Ls https://github.com/kaakaww/javaspringvulny/releases/download/0.2.0/java-spring-vuly-0.2.0.jar -o ./java-spring-vuly-0.2.0.jar
      java -jar ./java-spring-vuly-0.2.0.jar &
    displayName: Start JavaSpringVulny on linux
    condition: eq(variables['imageName'], 'ubuntu-latest')

  # run hawkscan with the StackHawk Azure Extension
  - task: RunHawkScan@1
    inputs:
      configFile: "stackhawk.yml"
      version: "4.3.0"
    env:
      HAWK_API_KEY: $(HAWK_API_KEY) # use variables in the azure devops ui to configure secrets and env vars
      APP_ENV: $(imageName)
      APP_ID: $(appId2)
      SARIF_ARTIFACT: true